Small Programming Language
This is the Current Syntax (Valid) - 
- The parser may accept other complexed combinations Which may not be valid evaluation arguments.(yet)
SemiColons are used to denote the end of a Expression 
Although they are not always needed by the compiler 

Basic Expressions - Constantly updated

DIM <Identifier> = String Integer Array boolean

<Identifier> =	Value 
				"Value" 
				true/false 
				[Value,Value,Value] 
				["Value","Value","Value"] 
				[true,False,true] 
				[]
<Identifier>	+= Value
				*= Value
				-= Value
				/= Value
<Identifier>	<  Value
				>  Value
				<= Value
				>= Value

<Identifier> + Value * Value + <Identifier> - (Value + Value);
<Identifier> = Value + <Identifier> * Value + Value - (<Identifier> + Value);
<Identifier> = ( <Identifier> = value );
'''Used For Functions/Lambdas
<Identifier>( <Identifier> = value );
<Identifier> = ( <Identifier> = value );


Combination Expressions : 
(i have not gone inot depth explaining here yet as there are too many to document due to the nesting)

Expression + - / * Expression;
Expression > < <= >= Expression;
''CodeBlock With Return Values
{Expression; <RETURN>[Value,Value,Value];}

{Expression;
Expression;
Expression;}